<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kermi.market.userservice.mapper.CustomerAddrMapper" >
  <resultMap id="BaseResultMap" type="com.kermi.market.userservice.dao.CustomerAddr" >
    <constructor >
      <idArg column="customer_addr_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="customer_id" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="zip" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="province" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="city" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="district" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="address" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="is_default" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="modified_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    customer_addr_id, customer_id, zip, province, city, district, address, is_default,
    modified_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from customer_addr
    where customer_addr_id = #{customerAddrId,jdbcType=INTEGER}
  </select>
  <select id="querySelective" parameterType="com.kermi.market.userservice.dao.CustomerAddr" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from customer_addr
    where 1=1
    <if test="customerAddrId != 0">
      and customerAddrId=#{customerAddrId}
    </if>
    <if test="customerId != null">
      and customerId=#{customerId}
    </if>
    <if test="zip != null">
      and zip=#{zip}
    </if>
    <if test="province != null">
      and province=#{province}
    </if>
    <if test="city != null">
      and city=#{city}
    </if>=#{district}
    <if test="district != null">
      and district=#{district}
    </if>
    <if test="address != null">
      and address=#{address}
    </if>
    <if test="isDefault != 0">
      and isDefault=#{isDefault}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer_addr
    where customer_addr_id = #{customerAddrId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.kermi.market.userservice.dao.CustomerAddr" >
    insert into customer_addr (customer_addr_id, customer_id, zip,
      province, city, district,
      address, is_default, modified_time
      )
    values (#{customerAddrId,jdbcType=INTEGER}, #{customerId,jdbcType=CHAR}, #{zip,jdbcType=INTEGER},
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR},
      #{address,jdbcType=VARCHAR}, #{isDefault,jdbcType=TINYINT}, #{modifiedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kermi.market.userservice.dao.CustomerAddr" >
    insert into customer_addr
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="customerAddrId != null" >
        customer_addr_id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="zip != null" >
        zip,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="district != null" >
        district,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="isDefault != null" >
        is_default,
      </if>
      <if test="modifiedTime != null" >
        modified_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="customerAddrId != null" >
        #{customerAddrId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=CHAR},
      </if>
      <if test="zip != null" >
        #{zip,jdbcType=INTEGER},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null" >
        #{district,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        #{isDefault,jdbcType=TINYINT},
      </if>
      <if test="modifiedTime != null" >
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kermi.market.userservice.dao.CustomerAddr" >
    update customer_addr
    <set >
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=CHAR},
      </if>
      <if test="zip != null" >
        zip = #{zip,jdbcType=INTEGER},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null" >
        district = #{district,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        is_default = #{isDefault,jdbcType=TINYINT},
      </if>
      <if test="modifiedTime != null" >
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where customer_addr_id = #{customerAddrId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kermi.market.userservice.dao.CustomerAddr" >
    update customer_addr
    set customer_id = #{customerId,jdbcType=CHAR},
      zip = #{zip,jdbcType=INTEGER},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=TINYINT},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP}
    where customer_addr_id = #{customerAddrId,jdbcType=INTEGER}
  </update>
</mapper>